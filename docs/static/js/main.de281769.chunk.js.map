{"version":3,"sources":["Comp.js","App.js","index.js"],"names":["Comp","props","scene","useRef","isPressed","engine","Engine","create","useState","accelerationX","setAccelerationX","accelerationY","setAccelerationY","setAccelerationZ","useEffect","cw","document","body","clientWidth","ch","clientHeight","render","Render","element","current","options","width","height","wireframes","background","stack","Composites","x","y","Bodies","circle","Common","random","mass","restitution","friction","frictionAir","World","add","world","rectangle","isStatic","fillStyle","run","stop","clear","canvas","remove","context","textures","gravity","onMouseDown","onMouseUp","onMouseMove","e","ball","clientX","clientY","Math","ref","style","position","top","left","onClick","DeviceMotionEvent","requestPermission","then","permissionState","window","addEventListener","event","accelerationIncludingGravity","z","alert","catch","App","ReactDOM","StrictMode","getElementById"],"mappings":"sNAkKeA,MA/Jf,SAAcC,GACZ,IAAMC,EAAQC,mBACRC,EAAYD,kBAAO,GAEnBE,EAASF,iBAAOG,SAAOC,UAC7B,EAA0CC,mBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA0CF,mBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA0CJ,mBAAS,GAAnD,mBAAsBK,GAAtB,WA0HA,OAjGAC,qBAAU,WACR,IAAMC,EAAKC,SAASC,KAAKC,YACnBC,EAAKH,SAASC,KAAKG,aAEnBC,EAASC,SAAOf,OAAO,CAC3BgB,QAASrB,EAAMsB,QACfnB,OAAQA,EAAOmB,QACfC,QAAS,CACPC,MAAOX,EACPY,OAAQR,EACRS,YAAY,EACZC,WAAY,iBAIVC,EAAQC,aAAWD,MAAM,IAAK,EAAG,GAAI,EAAG,GAAI,IAAI,SAACE,EAAGC,GACxD,OAAOC,SAAOC,OAAOH,EAAGC,EAAGG,SAAOC,OAAO,GAAI,IAAK,CAChDC,KAAMF,SAAOC,OAAO,GAAI,KACxBE,YAAa,IACbC,SAAU,IACVC,YAAa,QAmCjB,OA/BAC,QAAMC,IAAItC,EAAOmB,QAAQoB,MAAO,CAC9Bd,EACAI,SAAOW,UAAU9B,EAAK,EAAG,EAAGA,EAAI,GAAI,CAClC+B,UAAU,EACVzB,OAAQ,CAAE0B,UAAW,aAEvBb,SAAOW,UAAU,EAAG1B,EAAK,EAAG,GAAIA,EAAI,CAClC2B,UAAU,EACVzB,OAAQ,CAAE0B,UAAW,aAEvBb,SAAOW,UAAU9B,EAAK,EAAGI,EAAIJ,EAAI,GAAI,CACnC+B,UAAU,EACVzB,OAAQ,CAAE0B,UAAW,aAEvBb,SAAOW,UAAU9B,EAAII,EAAK,EAAG,GAAIA,EAAI,CACnC2B,UAAU,EACVzB,OAAQ,CAAE0B,UAAW,aAEvBb,SAAOC,OAAOpB,EAAK,EAAG,EAAG,GAAI,CAC3BuB,KAAM,IACNC,YAAa,IACbC,SAAU,IACVnB,OAAQ,CACN0B,UAAW,WAEbN,YAAa,OAGjBnC,SAAO0C,IAAI3C,EAAOmB,SAElBF,SAAO0B,IAAI3B,GACJ,WACLC,SAAO2B,KAAK5B,GACZqB,QAAMQ,MAAM7C,EAAOmB,QAAQoB,OAC3BtC,SAAO4C,MAAM7C,EAAOmB,SACpBH,EAAO8B,OAAOC,SACd/B,EAAO8B,OAAS,KAChB9B,EAAOgC,QAAU,KACjBhC,EAAOiC,SAAW,MAEnB,IA8BHjD,EAAOmB,QAAQ+B,QAAQvB,EAAIvB,EAC3BJ,EAAOmB,QAAQ+B,QAAQtB,GAAKtB,EAG1B,gCAME,qBACE6C,YAvCa,WACjBpD,EAAUoB,SAAU,GAuChBiC,UApCW,WACfrD,EAAUoB,SAAU,GAoChBkC,YAjCkB,SAACC,GACvB,GAAIvD,EAAUoB,QAAS,CACrB,IAAMoC,EAAO1B,SAAOC,OAClBwB,EAAEE,QACFF,EAAEG,QACF,GAAqB,GAAhBC,KAAK1B,SACV,CACEC,KAAM,IACNC,YAAa,IACbC,SAAU,IACVnB,OAAQ,CACN0B,UAAW,WAEbN,YAAa,KAGjBC,QAAMC,IAAItC,EAAOmB,QAAQoB,MAAO,CAACgB,MAcjC,SAKE,qBAAKI,IAAK9D,EAAO+D,MAAO,CAAEvC,MAAO,OAAQC,OAAQ,YAEnD,wBACEsC,MAAO,CACLvC,MAAO,QACPC,OAAQ,QACRuC,SAAU,QACVC,IAAK,MACLC,KAAM,OAERC,QAAS,WA7ITC,kBAAkBC,kBACpBD,kBAAkBC,oBACfC,MAAK,SAACC,GACmB,YAApBA,GACFC,OAAOC,iBAAiB,gBAAgB,SAACC,GAClCA,EAAMC,8BAIXnE,EAAiBkE,EAAMC,6BAA6B7C,GACpDpB,EAAiBgE,EAAMC,6BAA6B5C,GACpDpB,EAAiB+D,EAAMC,6BAA6BC,IALlDC,MAAM,oDASbC,OAAM,SAACrB,GACNoB,MAAMpB,MAGVoB,MAAM,qDAkHN,sDCvISE,EARH,WACV,OACE,mCACE,cAAC,EAAD,OCDNC,IAAS7D,OACP,cAAC,IAAM8D,WAAP,UACE,cAAC,EAAD,MAEFnE,SAASoE,eAAe,W","file":"static/js/main.de281769.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { Engine, Render, Bodies, World, Composites, Common } from \"matter-js\";\r\n\r\nfunction Comp(props) {\r\n  const scene = useRef();\r\n  const isPressed = useRef(false);\r\n\r\n  const engine = useRef(Engine.create());\r\n  const [accelerationX, setAccelerationX] = useState(0);\r\n  const [accelerationY, setAccelerationY] = useState(0);\r\n  const [accelerationZ, setAccelerationZ] = useState(0);\r\n\r\n  const deviceMotionRequest = () => {\r\n    if (DeviceMotionEvent.requestPermission) {\r\n      DeviceMotionEvent.requestPermission()\r\n        .then((permissionState) => {\r\n          if (permissionState === \"granted\") {\r\n            window.addEventListener(\"devicemotion\", (event) => {\r\n              if (!event.accelerationIncludingGravity) {\r\n                alert(\"event.accelerationIncludingGravity is null\");\r\n                return;\r\n              }\r\n              setAccelerationX(event.accelerationIncludingGravity.x);\r\n              setAccelerationY(event.accelerationIncludingGravity.y);\r\n              setAccelerationZ(event.accelerationIncludingGravity.z);\r\n            });\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          alert(e);\r\n        });\r\n    } else {\r\n      alert(\"DeviceMotionEvent.requestPermission is not found\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const cw = document.body.clientWidth;\r\n    const ch = document.body.clientHeight;\r\n\r\n    const render = Render.create({\r\n      element: scene.current,\r\n      engine: engine.current,\r\n      options: {\r\n        width: cw,\r\n        height: ch,\r\n        wireframes: false,\r\n        background: \"transparent\",\r\n      },\r\n    });\r\n\r\n    const stack = Composites.stack(100, 0, 10, 8, 10, 10, (x, y) => {\r\n      return Bodies.circle(x, y, Common.random(15, 60), {\r\n        mass: Common.random(50, 100),\r\n        restitution: 0.01,\r\n        friction: 0.01,\r\n        frictionAir: 0.1,\r\n      });\r\n    });\r\n\r\n    World.add(engine.current.world, [\r\n      stack,\r\n      Bodies.rectangle(cw / 2, 0, cw, 20, {\r\n        isStatic: true,\r\n        render: { fillStyle: \"#ff0000\" },\r\n      }),\r\n      Bodies.rectangle(0, ch / 2, 20, ch, {\r\n        isStatic: true,\r\n        render: { fillStyle: \"#ff0000\" },\r\n      }),\r\n      Bodies.rectangle(cw / 2, ch, cw, 20, {\r\n        isStatic: true,\r\n        render: { fillStyle: \"#ff0000\" },\r\n      }),\r\n      Bodies.rectangle(cw, ch / 2, 20, ch, {\r\n        isStatic: true,\r\n        render: { fillStyle: \"#ff0000\" },\r\n      }),\r\n      Bodies.circle(cw / 2, 0, 50, {\r\n        mass: 100,\r\n        restitution: 0.01,\r\n        friction: 0.01,\r\n        render: {\r\n          fillStyle: \"#0000ff\",\r\n        },\r\n        frictionAir: 0.5,\r\n      }),\r\n    ]);\r\n    Engine.run(engine.current);\r\n\r\n    Render.run(render);\r\n    return () => {\r\n      Render.stop(render);\r\n      World.clear(engine.current.world);\r\n      Engine.clear(engine.current);\r\n      render.canvas.remove();\r\n      render.canvas = null;\r\n      render.context = null;\r\n      render.textures = {};\r\n    };\r\n  }, []);\r\n\r\n  const handleDown = () => {\r\n    isPressed.current = true;\r\n  };\r\n\r\n  const handleUp = () => {\r\n    isPressed.current = false;\r\n  };\r\n\r\n  const handleAddCircle = (e) => {\r\n    if (isPressed.current) {\r\n      const ball = Bodies.circle(\r\n        e.clientX,\r\n        e.clientY,\r\n        10 + Math.random() * 30,\r\n        {\r\n          mass: 100,\r\n          restitution: 0.01,\r\n          friction: 0.01,\r\n          render: {\r\n            fillStyle: \"#0000ff\",\r\n          },\r\n          frictionAir: 0.1,\r\n        }\r\n      );\r\n      World.add(engine.current.world, [ball]);\r\n    }\r\n  };\r\n\r\n  engine.current.gravity.x = accelerationX;\r\n  engine.current.gravity.y = -accelerationY;\r\n\r\n  return (\r\n    <div>\r\n      {/* <div>\r\n        <span>x:{accelerationX},</span>\r\n        <span>y:{accelerationY},</span>\r\n        <span>z:{accelerationZ}</span>\r\n      </div> */}\r\n      <div\r\n        onMouseDown={handleDown}\r\n        onMouseUp={handleUp}\r\n        onMouseMove={handleAddCircle}\r\n      >\r\n        <div ref={scene} style={{ width: \"100%\", height: \"100%\" }} />\r\n      </div>\r\n      <button\r\n        style={{\r\n          width: \"500px\",\r\n          height: \"100px\",\r\n          position: \"fixed\",\r\n          top: \"0px\",\r\n          left: \"0px\",\r\n        }}\r\n        onClick={() => deviceMotionRequest()}\r\n      >\r\n        センサー開始\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comp;\r\n","import React from \"react\";\r\nimport Comp from \"./Comp.js\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Comp />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}