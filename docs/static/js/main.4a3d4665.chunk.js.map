{"version":3,"sources":["HamburgerMenu.js","Modal.js","Tapioca.js","App.js","index.js"],"names":["HamburgerMenu","props","useState","isOpen","setIsOpen","type","className","onClick","handleAddStraw","setBackgroundColor","setCupImage","Modal","isModalOpen","id","href","imageData","download","src","style","width","setIsModalOpen","value","Tapioca","cw","document","body","clientWidth","ch","clientHeight","scene","useRef","engine","Engine","create","world","current","backgroundColor","cupImage","setImageData","gravity","x","accelerationX","y","accelerationY","useEffect","render","Render","element","options","height","wireframes","background","mouse","Mouse","canvas","mouseConstraint","MouseConstraint","constraint","angularStiffness","visible","Composite","add","stack","Composites","Bodies","circle","Common","random","mass","restitution","friction","frictionAir","sprite","texture","Math","floor","World","rectangle","isStatic","fillStyle","run","stop","clear","remove","context","textures","target","getElementById","html2camvas","then","imgData","toDataURL","e","straw","strawConstraint","Constraint","pointA","Vector","clone","position","bodyB","pointB","length","top","left","right","margin","ref","App","isStart","setIsStart","setAccelerationX","setAccelerationY","display","DeviceMotionEvent","requestPermission","permissionState","window","addEventListener","event","accelerationIncludingGravity","alert","catch","bottom","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.4a3d4665.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst HamburgerMenu = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        type=\"button\"\r\n        className={isOpen ? \"menu-trigger is-active\" : \"menu-trigger\"}\r\n        onClick={() => {\r\n          setIsOpen(!isOpen);\r\n        }}\r\n      >\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </button>\r\n      <div className={isOpen ? \"menu is-active\" : \"menu\"}>\r\n        <div\r\n          className=\"menu-item\"\r\n          onClick={() => {\r\n            props.handleAddStraw();\r\n          }}\r\n        >\r\n          ストロー\r\n        </div>\r\n        <div\r\n          className=\"menu-item\"\r\n          onClick={() => {\r\n            props.setBackgroundColor(\"#FFC0CB\");\r\n          }}\r\n        >\r\n          イチゴミルク\r\n        </div>\r\n        <div\r\n          className=\"menu-item\"\r\n          onClick={() => {\r\n            props.setBackgroundColor(\"#E9ED88\");\r\n          }}\r\n        >\r\n          抹茶\r\n        </div>\r\n        <div\r\n          className=\"menu-item\"\r\n          onClick={() => {\r\n            props.setBackgroundColor(\"#dcac65\");\r\n          }}\r\n        >\r\n          ミルクティー\r\n        </div>\r\n\r\n        <div\r\n          className=\"menu-item\"\r\n          onClick={() => props.setCupImage(\"logo.PNG\")}\r\n        >\r\n          サスタピ\r\n        </div>\r\n        <div\r\n          className=\"menu-item\"\r\n          onClick={() => props.setCupImage(\"alley.png\")}\r\n        >\r\n          The alley\r\n        </div>\r\n        <div\r\n          className=\"menu-item\"\r\n          onClick={() => props.setCupImage(\"gongcha.png\")}\r\n        >\r\n          Cong tya\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HamburgerMenu;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <>\r\n      {props.isModalOpen && (\r\n        <div id=\"overlay\">\r\n          <div id=\"content\">\r\n            <div>\r\n              <a href={props.imageData} id=\"myTapioca\" download=\"myTapioca.png\">\r\n                download photo\r\n              </a>\r\n            </div>\r\n            <div>\r\n              <a\r\n                href={\r\n                  \"https://twitter.com/intent/tweet?text=\" +\r\n                  \"サステナブルタピオカやってみた！%0D%0A\" +\r\n                  \"&hashtags=サステナブルタピオカ\" +\r\n                  \"&url=https://sasutapi.com\"\r\n                }\r\n              >\r\n                tweet\r\n              </a>\r\n            </div>\r\n            <img src={props.imageData} style={{ width: \"100%\" }} />\r\n            <input\r\n              type=\"button\"\r\n              onClick={() => {\r\n                props.setIsModalOpen(false);\r\n              }}\r\n              value=\"close\"\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Common,\r\n  Engine,\r\n  Render,\r\n  Bodies,\r\n  World,\r\n  Composites,\r\n  Constraint,\r\n  MouseConstraint,\r\n  Mouse,\r\n  Composite,\r\n  Vector,\r\n} from \"matter-js\";\r\nimport html2camvas from \"html2canvas\";\r\nimport HamburgerMenu from \"./HamburgerMenu.js\";\r\nimport Modal from \"./Modal.js\";\r\n\r\nconst Tapioca = (props) => {\r\n  const cw = document.body.clientWidth;\r\n  const ch = document.body.clientHeight;\r\n  const scene = useRef();\r\n  const engine = useRef(Engine.create());\r\n  const world = engine.current.world;\r\n  const isPressed = useRef(false);\r\n\r\n  const [backgroundColor, setBackgroundColor] = useState(\"#dcac65\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [cupImage, setCupImage] = useState(\"logo.PNG\");\r\n  const [imageData, setImageData] = useState();\r\n\r\n  const capture = () => {\r\n    setIsModalOpen(true);\r\n    const target = document.getElementById(\"target\");\r\n    html2camvas(target).then((canvas) => {\r\n      const imgData = canvas.toDataURL();\r\n      setImageData(imgData);\r\n    });\r\n  };\r\n\r\n  const handleAddStraw = (e) => {\r\n    const straw = Bodies.rectangle(cw / 2, ch / 2, 40, ch, {\r\n      render: { fillStyle: \"#FF0000\" },\r\n    });\r\n    const strawConstraint = Constraint.create({\r\n      pointA: Vector.clone({\r\n        x: straw.position.x,\r\n        y: straw.position.y - (ch / 2) * 0.8,\r\n      }),\r\n      bodyB: straw,\r\n      pointB: { x: 0, y: (-ch / 2) * 0.8 },\r\n      length: 0,\r\n    });\r\n\r\n    Composite.add(world, [straw, strawConstraint]);\r\n  };\r\n\r\n  document.body.style = `background: ${backgroundColor}`;\r\n  engine.current.gravity.x = props.accelerationX;\r\n  engine.current.gravity.y = -props.accelerationY;\r\n\r\n  useEffect(() => {\r\n    const render = Render.create({\r\n      element: scene.current,\r\n      engine: engine.current,\r\n      options: {\r\n        width: cw,\r\n        height: ch,\r\n        wireframes: false,\r\n        background: \"#transparent\",\r\n      },\r\n    });\r\n\r\n    const mouse = Mouse.create(render.canvas);\r\n    const mouseConstraint = MouseConstraint.create(engine.current, {\r\n      mouse: mouse,\r\n      constraint: {\r\n        angularStiffness: 0,\r\n        render: {\r\n          visible: false,\r\n        },\r\n      },\r\n    });\r\n\r\n    Composite.add(world, mouseConstraint);\r\n\r\n    const stack = Composites.stack(0, 0, 10, 4, 1, 1, (x, y) => {\r\n      return Bodies.circle(x, y, Common.random(30, 30), {\r\n        mass: 10,\r\n        restitution: 0.01,\r\n        friction: 0.01,\r\n        frictionAir: Common.random(0.3, 0.5),\r\n        render: {\r\n          sprite: {\r\n            texture: `./tapioca_${\r\n              Math.floor(Math.random() * (2 - 1 + 1)) + 1\r\n            }.png`,\r\n            //texture: `./tapioca_${11}.png`,\r\n          },\r\n        },\r\n      });\r\n    });\r\n\r\n    World.add(engine.current.world, [\r\n      stack,\r\n      Bodies.rectangle(cw / 2, -10, cw, 20, {\r\n        isStatic: true,\r\n        render: { fillStyle: \"#000000\" },\r\n      }),\r\n      Bodies.rectangle(-10, ch / 2, 20, ch, {\r\n        isStatic: true,\r\n        render: { fillStyle: \"#000000\" },\r\n      }),\r\n      Bodies.rectangle(cw / 2, ch + 10, cw, 20, {\r\n        isStatic: true,\r\n        render: { fillStyle: \"#000000\" },\r\n      }),\r\n      Bodies.rectangle(cw + 10, ch / 2, 20, ch, {\r\n        isStatic: true,\r\n        render: { fillStyle: \"#000000\" },\r\n      }),\r\n    ]);\r\n    Engine.run(engine.current);\r\n\r\n    Render.run(render);\r\n\r\n    return () => {\r\n      Render.stop(render);\r\n      World.clear(engine.current.world);\r\n      Engine.clear(engine.current);\r\n      render.canvas.remove();\r\n      render.canvas = null;\r\n      render.context = null;\r\n      render.textures = {};\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {/* <div>x:{accelerationX},y:{accelerationY},z:{accelerationZ}</div> */}\r\n      <div>\r\n        <input type=\"button\" onClick={capture} value=\"save photo\" />\r\n      </div>\r\n      <HamburgerMenu\r\n        setBackgroundColor={setBackgroundColor}\r\n        setCupImage={setCupImage}\r\n        handleAddStraw={handleAddStraw}\r\n      />\r\n      <div id=\"target\" style={{ backgroundColor: backgroundColor }}>\r\n        <img\r\n          src={cupImage}\r\n          style={{\r\n            width: \"90%\",\r\n            position: \"absolute\",\r\n            top: \"20%\",\r\n            left: \"0\",\r\n            right: \"0\",\r\n            margin: \"auto\",\r\n          }}\r\n        />\r\n        <div ref={scene} style={{ width: \"100%\", height: \"100%\" }} />\r\n      </div>\r\n      {/* modal */}\r\n      <Modal\r\n        id=\"modal-main\"\r\n        imageData={imageData}\r\n        isModalOpen={isModalOpen}\r\n        setIsModalOpen={setIsModalOpen}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tapioca;\r\n","import React, { useState } from \"react\";\r\nimport Tapioca from \"./Tapioca.js\";\r\n\r\nconst App = () => {\r\n  const [isStart, setIsStart] = useState(false);\r\n  const [accelerationX, setAccelerationX] = useState(0);\r\n  const [accelerationY, setAccelerationY] = useState(0);\r\n\r\n  const deviceMotionRequest = () => {\r\n    if (DeviceMotionEvent.requestPermission) {\r\n      DeviceMotionEvent.requestPermission()\r\n        .then((permissionState) => {\r\n          if (permissionState === \"granted\") {\r\n            window.addEventListener(\"devicemotion\", (event) => {\r\n              if (!event.accelerationIncludingGravity) {\r\n                alert(\"event.accelerationIncludingGravity is null\");\r\n                return;\r\n              }\r\n              setAccelerationX(event.accelerationIncludingGravity.x);\r\n              setAccelerationY(event.accelerationIncludingGravity.y);\r\n            });\r\n          } else {\r\n            setAccelerationX(0);\r\n            setAccelerationY(-3);\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          alert(e);\r\n        });\r\n    } else {\r\n      // 加速度センサーがない場合は自然落下\r\n      alert(\"このデバイスには加速度センサーが搭載されておりません\");\r\n      setAccelerationX(0);\r\n      setAccelerationY(-3);\r\n    }\r\n  };\r\n\r\n  const start = () => {\r\n    deviceMotionRequest();\r\n    setIsStart(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isStart && (\r\n        <Tapioca accelerationX={accelerationX} accelerationY={accelerationY} />\r\n      )}\r\n      {!isStart && (\r\n        <div style={{ height: \"100%\" }}>\r\n          <img\r\n            src={\"./logo.PNG\"}\r\n            style={{ width: \"99%\", display: \"block\", margin: \"100px auto \" }}\r\n          />\r\n\r\n          <img\r\n            src={\"./start-button.PNG\"}\r\n            onClick={start}\r\n            style={{\r\n              width: \"50%\",\r\n              position: \"absolute\",\r\n              bottom: \"10%\",\r\n              left: \"0\",\r\n              right: \"0\",\r\n              margin: \"auto\",\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}