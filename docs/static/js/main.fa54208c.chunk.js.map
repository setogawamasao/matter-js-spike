{"version":3,"sources":["Tapioca.js","App.js","index.js"],"names":["Tapioca","props","scene","useRef","engine","Engine","create","useEffect","cw","document","body","clientWidth","ch","clientHeight","world","current","render","Render","element","options","width","height","wireframes","background","mouse","Mouse","canvas","mouseConstraint","MouseConstraint","constraint","angularStiffness","visible","Composite","add","stack","Composites","x","y","Bodies","circle","Common","random","mass","restitution","friction","frictionAir","sprite","texture","Math","floor","straw","rectangle","fillStyle","strawConstraint","Constraint","pointA","Vector","clone","position","bodyB","pointB","length","World","isStatic","run","stop","clear","remove","context","textures","gravity","accelerationX","accelerationY","ref","style","App","useState","isStart","setIsStart","setAccelerationX","setAccelerationY","src","display","margin","onClick","DeviceMotionEvent","requestPermission","then","permissionState","window","addEventListener","event","accelerationIncludingGravity","alert","catch","e","bottom","left","right","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fa54208c.chunk.js","sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport {\r\n  Common,\r\n  Engine,\r\n  Render,\r\n  Bodies,\r\n  World,\r\n  Composites,\r\n  Constraint,\r\n  MouseConstraint,\r\n  Mouse,\r\n  Composite,\r\n  Vector,\r\n} from \"matter-js\";\r\n\r\nconst Tapioca = (props) => {\r\n  const scene = useRef();\r\n  const engine = useRef(Engine.create());\r\n\r\n  const isPressed = useRef(false);\r\n\r\n  useEffect(() => {\r\n    const cw = document.body.clientWidth;\r\n    const ch = document.body.clientHeight;\r\n    const world = engine.current.world;\r\n\r\n    const render = Render.create({\r\n      element: scene.current,\r\n      engine: engine.current,\r\n      options: {\r\n        width: cw,\r\n        height: ch,\r\n        wireframes: false,\r\n        background: \"#dcac65\",\r\n      },\r\n    });\r\n\r\n    const mouse = Mouse.create(render.canvas);\r\n    const mouseConstraint = MouseConstraint.create(engine.current, {\r\n      mouse: mouse,\r\n      constraint: {\r\n        angularStiffness: 0,\r\n        render: {\r\n          visible: false,\r\n        },\r\n      },\r\n    });\r\n\r\n    Composite.add(world, mouseConstraint);\r\n\r\n    const stack = Composites.stack(0, 0, 10, 4, 1, 1, (x, y) => {\r\n      return Bodies.circle(x, y, Common.random(70, 80), {\r\n        mass: 10,\r\n        restitution: 0.01,\r\n        friction: 0.01,\r\n        frictionAir: Common.random(0.3, 0.5),\r\n        render: {\r\n          sprite: {\r\n            texture: `./tapioca_${\r\n              Math.floor(Math.random() * (2 - 1 + 1)) + 1\r\n            }.png`,\r\n            //texture: `./tapioca_${11}.png`,\r\n          },\r\n        },\r\n      });\r\n    });\r\n\r\n    const straw = Bodies.rectangle(cw / 2, ch / 2, 50, ch, {\r\n      render: { fillStyle: \"#FF0000\" },\r\n    });\r\n    const strawConstraint = Constraint.create({\r\n      pointA: Vector.clone({\r\n        x: straw.position.x,\r\n        y: straw.position.y - (ch / 2) * 0.8,\r\n      }),\r\n      bodyB: straw,\r\n      pointB: { x: 0, y: (-ch / 2) * 0.8 },\r\n      length: 0,\r\n    });\r\n\r\n    Composite.add(world, [straw, strawConstraint]);\r\n\r\n    World.add(engine.current.world, [\r\n      stack,\r\n      Bodies.rectangle(cw / 2, -10, cw, 20, {\r\n        isStatic: true,\r\n        render: { fillStyle: \"#000000\" },\r\n      }),\r\n      Bodies.rectangle(-10, ch / 2, 20, ch, {\r\n        isStatic: true,\r\n        render: { fillStyle: \"#000000\" },\r\n      }),\r\n      Bodies.rectangle(cw / 2, ch + 10, cw, 20, {\r\n        isStatic: true,\r\n        render: { fillStyle: \"#000000\" },\r\n      }),\r\n      Bodies.rectangle(cw + 10, ch / 2, 20, ch, {\r\n        isStatic: true,\r\n        render: { fillStyle: \"#000000\" },\r\n      }),\r\n      // Bodies.circle(cw / 2, 0, 50, {\r\n      //   mass: 100,\r\n      //   restitution: 0.01,\r\n      //   friction: 0.01,\r\n      //   render: {\r\n      //     fillStyle: \"#0000ff\",\r\n      //   },\r\n      //   frictionAir: 0.5,\r\n      // }),\r\n    ]);\r\n    Engine.run(engine.current);\r\n\r\n    Render.run(render);\r\n\r\n    return () => {\r\n      Render.stop(render);\r\n      World.clear(engine.current.world);\r\n      Engine.clear(engine.current);\r\n      render.canvas.remove();\r\n      render.canvas = null;\r\n      render.context = null;\r\n      render.textures = {};\r\n    };\r\n  }, []);\r\n\r\n  const handleDown = () => {\r\n    isPressed.current = true;\r\n  };\r\n\r\n  const handleUp = () => {\r\n    isPressed.current = false;\r\n  };\r\n\r\n  const handleAddCircle = (e) => {\r\n    if (isPressed.current) {\r\n      const ball = Bodies.circle(\r\n        e.clientX,\r\n        e.clientY,\r\n        10 + Math.random() * 30,\r\n        {\r\n          mass: 100,\r\n          restitution: 0.01,\r\n          friction: 0.01,\r\n          render: {\r\n            fillStyle: \"#0000ff\",\r\n          },\r\n          frictionAir: 0.1,\r\n        }\r\n      );\r\n      World.add(engine.current.world, [ball]);\r\n    }\r\n  };\r\n\r\n  engine.current.gravity.x = props.accelerationX;\r\n  engine.current.gravity.y = -props.accelerationY;\r\n\r\n  return (\r\n    <div>\r\n      {/* <div>x:{accelerationX},y:{accelerationY},z:{accelerationZ}</div> */}\r\n      <div\r\n      // onMouseDown={handleDown}\r\n      // onMouseUp={handleUp}\r\n      // onMouseMove={handleAddCircle}\r\n      >\r\n        <div ref={scene} style={{ width: \"100%\", height: \"100%\" }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tapioca;\r\n","import React, { useState } from \"react\";\r\nimport Tapioca from \"./Tapioca.js\";\r\n\r\nconst App = () => {\r\n  const [isStart, setIsStart] = useState(false);\r\n  const [accelerationX, setAccelerationX] = useState(0);\r\n  const [accelerationY, setAccelerationY] = useState(0);\r\n\r\n  const deviceMotionRequest = () => {\r\n    if (DeviceMotionEvent.requestPermission) {\r\n      DeviceMotionEvent.requestPermission()\r\n        .then((permissionState) => {\r\n          if (permissionState === \"granted\") {\r\n            window.addEventListener(\"devicemotion\", (event) => {\r\n              if (!event.accelerationIncludingGravity) {\r\n                alert(\"event.accelerationIncludingGravity is null\");\r\n                return;\r\n              }\r\n              setAccelerationX(event.accelerationIncludingGravity.x);\r\n              setAccelerationY(event.accelerationIncludingGravity.y);\r\n            });\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          alert(e);\r\n        });\r\n    } else {\r\n      // 加速度センサーがない場合は自然落下\r\n      alert(\"このデバイスには加速度センサーが搭載されておりません\");\r\n      setAccelerationX(0);\r\n      setAccelerationY(-3);\r\n    }\r\n  };\r\n\r\n  const start = () => {\r\n    deviceMotionRequest();\r\n    setIsStart(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isStart && (\r\n        <Tapioca accelerationX={accelerationX} accelerationY={accelerationY} />\r\n      )}\r\n      {!isStart && (\r\n        <div style={{ height: \"100%\" }}>\r\n          <img\r\n            src={\"./logo.PNG\"}\r\n            style={{ width: \"99%\", display: \"block\", margin: \"100px auto \" }}\r\n          />\r\n\r\n          <img\r\n            src={\"./start-button.PNG\"}\r\n            onClick={start}\r\n            style={{\r\n              width: \"50%\",\r\n              position: \"absolute\",\r\n              bottom: \"10%\",\r\n              left: \"0\",\r\n              right: \"0\",\r\n              margin: \"auto\",\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}